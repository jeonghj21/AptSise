# Raw 데이터 테이블
create table aptsise (
id int not null,
price int not null,
made_year int not null,
year int  not null,
road_name varchar(255) null,
road_bldg_pri varchar(5),
road_bldg_sec varchar(5),
road_region_cd varchar(5),
road_seq varchar(2),
road_base_cd varchar(2),
road_cd varchar(7),
dong varchar(255) not null,
dong_pri varchar(4),
dong_sec varchar(4),
dong_region1_cd varchar(5),
dong_region2_cd varchar(5),
dong_jibun varchar(2),
apt_name varchar(255) not null,
month int not null,
day int not null,
seq varchar(20) not null,
area double not null,
jibun varchar(20) ,
region varchar(5) not null,
floor int,
qrt int,
yyyyqrt varchar(6),
primary key (region, id)
);

# 전처리된 데이터 테이블
create table apt_sale (
id int not null auto_increment,
price int not null,
saled datetime,
area double not null,
floor int,
apt_id int,
primary key (id)
);

# 초기 데이터 업로드
LOAD DATA INFILE '/home/jhj/sisedata/apt-11110-load.csv'
INTO TABLE aptsise
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
IGNORE 1 ROWS
;

# 아파트 마스터 테이블
create table apt_master (
id int not null auto_increment, 
apt_name varchar(255) not null, 
region varchar(5) not null, 
road_name varchar(255), 
road_bldg_pri varchar(5), 
road_bldg_sec varchar(5), 
road_region_cd varchar(5), 
road_seq varchar(2), 
road_base_cd varchar(2), 
road_cd varchar(7), 
dong varchar(255), 
dong_pri varchar(4), 
dong_sec varchar(4), 
dong_region1_cd varchar(5), 
dong_region2_cd varchar(5), 
dong_jibun varchar(2), jibun varchar(20), primary key (id));

# 초기 테이블에서 아파트 마스터 테이블 생성
insert into apt_master 
    select NULL
           , apt_name
           , region
           , road_name
           , road_bldg_pri
           , road_bldg_sec
           , road_region_cd
           , road_seq
           , road_base_cd
           , road_cd, dong
           , dong_pri
           , dong_sec
           , dong_region1_cd
           , dong_region2_cd
           , dong_jibun
           , jibun 
    from aptsise 
   group by apt_name
           , region
           , road_name
           , road_bldg_pri
           , road_bldg_sec
           , road_region_cd
           , road_seq
           , road_base_cd
           , road_cd, dong
           , dong_pri
           , dong_sec
           , dong_region1_cd
           , dong_region2_cd
           , dong_jibun
           , jibun ;


SELECT * FROM apt_master 
INTO OUTFILE '/home/jhj/sisedata/apt_master.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
;

# 초기 테이블에 아파트 마스터 연계용 컬럼 추가
alter table aptsise add column apt_id int ;

# 초기 테이블에 아파트 마스터 연계용 컬럼 업데이트
update aptsise a, apt_master b set a.apt_id = b.id
 where a.apt_name = b.apt_name 
    and a.region = b.region 
    and a.road_name = b.road_name 
    and a.road_bldg_pri = b.road_bldg_pri 
    and a.road_bldg_sec = b.road_bldg_sec 
    and a.road_region_cd = b.road_region_cd 
    and a.road_seq = b.road_seq 
    and a.road_base_cd = b.road_base_cd 
    and a.road_cd = b.road_cd 
    and a.dong = b.dong 
    and a.dong_pri = b.dong_pri 
    and a.dong_sec = b.dong_sec 
    and a.dong_region1_cd = b.dong_region1_cd 
    and a.dong_region2_cd = b.dong_region2_cd 
    and a.dong_jibun = b.dong_jibun 
    and a.jibun = b.jibun;

# 아파트 실거래 테이블에 인덱스 추가
alter table apt_sale add index apt_id_idx (apt_id);

# 동 마스터 테이블 생성
create table dong_master (
    dong_cd char(5) not null, 
    region_cd char(5) not null, 
    dong_name varchar(255) not null, 
    primary key (dong_cd, region_cd)
);

insert into dong_master 
    select dong_region1_cd, 
            dong_region2_cd, 
            dong 
     from apt_master 
   group by dong_region1_cd, dong_region2_cd, dong;

insert into apt_sale 
    select NULL, 
            price, 
            str_to_date(concat(year, lpad(month, 2, '0'), day),'%Y%m%d') , 
            area, 
            floor, 
            apt_id 
     from aptsise;

alter table apt_sale add constraint apt_sale_fk foreign key(apt_id) references apt_master(id);

LOAD DATA INFILE '/home/jhj/dong.csv'
INTO TABLE apt_dong
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n' 
IGNORE 1 ROWS
;

alter table apt_sale add area_type varchar(2);


update apt_sale set area_type = case when area <= 60 then '01' when area>60 and area<=85 then '02' when area>85 and area<=135 then '03' when area>135 then '04' end;


update apt_sale set ym = concat(year(saled),lpad(month(saled),2,'0'));

alter table apt_master add made_year int;

update apt_master a set made_year = (select made_year from jhj.aptsise where apt_id = a.id limit 1);

create table apt_sale_stats (region char(5) not null, dong char(5) not null, made_year int not null, area_type char(2) not null, ym char(6) not null, unit_price integer not null, cnt integer not null, primary key(region, dong, made_year, area_type, ym));

insert into apt_sale_stats select dong_region1_cd, dong_region2_cd, made_year, area_type, ym, avg(price/(area/3.3)), count(*) from apt_sale a, apt_master b where a.apt_id = b.id group by dong_region1_cd, dong_region2_cd, made_year, area_type, ym;

update apt_sale set apt_id = 1356 where apt_id=1563;
delete from apt_master where id=1563;
delete from apt_master where id in (2062);
update apt_sale set apt_id = 2244 where apt_id in (2062);
delete from apt_master where id in (2119,2189);
update apt_sale set apt_id = 2245 where apt_id in (2119,2189);

create table tmp_apt_mapping (k_apt_id char(9), apt_id int);

LOAD DATA INFILE '/tmp/mysql/k_apt_mapping.csv' INTO TABLE tmp_apt_mapping FIELDS TERMINATED BY ','  LINES TERMINATED BY '\n'  IGNORE 1 ROWS;
alter table apt_master add k_apt_id char(9);
update apt_master a set k_apt_id=(select k_apt_id from tmp_apt_mapping where apt_id=a.id);



create table tmp_seoul_apt (k_apt_id char(9),name varchar(100),apt_type varchar(40),gu varchar(10),dong varchar(10),etc_addr varchar(100),road_name varchar(40),bldg_no varchar(10),own_type varchar(20),way_type varchar(20),heat_type varchar(20),dong_cnt int,family_cnt int,construct_co varchar(100),biz_co varchar(100),begin_dt date,area_01_cnt int,area_02_cnt int,area_03_cnt int,area_04_cnt int);

LOAD DATA INFILE '/tmp/mysql/seoul_apt.csv' INTO TABLE tmp_seoul_apt FIELDS TERMINATED BY ','  LINES TERMINATED BY '\n'  IGNORE 1 ROWS;

alter table tmp_seoul_apt add complete_dt date;

update tmp_seoul_apt set complete_dt = str_to_date(substr(begin_dt,1,10), '%Y-%m-%d');

create table access_log (ip varchar(20), dt datetime);

create table tmp_dup_apt1 as select apt_name, region, road_name, road_bldg_pri, dong, k_apt_id, count(*) cnt from apt_master group by apt_name, region, road_name, road_bldg_pri, dong, dong_pri, dong_jibun, jibun, k_apt_id having count(*) > 1 ;

create table sale_stat_change_rate (complex_flag char(1) not null, region char(5) not null, dong char(5) not null, made_year int not null, area_type ch
ar(2) not null, ym char(6) not null, period int not null, unit_price int not null, prev_ym char(6) not null, prev_price int not null, change_rate decimal(10,2
) not null, primary key(complex_flag, region, dong, made_year, area_type, ym, period));

insert into sale_stat_change_rate select a.complex_flag, a.region, a.dong, a.made_year, a.area_type, a.ym, 12, a.unit_price, b.ym, b.unit_price, (a.uni
t_price/b.unit_price)*100 from apt_sale_stats a, apt_sale_stats b where b.region=a.region and b.dong=a.dong and b.made_year = a.made_year and b.area_type = a.
area_type and b.complex_flag = a.complex_flag and b.ym = concat(cast(substr(a.ym,1,4)-1 as char(4)), substr(a.ym,5,2));

create table ref_region (region_cd char(5) not null primary key, region_name varchar(10) not null);

insert into ref_region values('강북구', '11305');
insert into ref_region values('광진구', '11215');
insert into ref_region values('노원구', '11350');
insert into ref_region values('도봉구', '11320');
insert into ref_region values('동대문구', '11230');
insert into ref_region values('마포구', '11440');
insert into ref_region values('서대문구', '11410');
insert into ref_region values('성동구', '11200');
insert into ref_region values('성북구', '11290');
insert into ref_region values('용산구', '11170');
insert into ref_region values('은평구', '11380');
insert into ref_region values('종로구', '11110');
insert into ref_region values('중구', '11140');
insert into ref_region values('중랑구', '11260');
insert into ref_region values('강남구', '11680');
insert into ref_region values('강동구', '11740');
insert into ref_region values('강서구', '11500');
insert into ref_region values('관악구', '11620');
insert into ref_region values('구로구', '11530');
insert into ref_region values('금천구', '11545');
insert into ref_region values('동작구', '11590');
insert into ref_region values('서초구', '11650');
insert into ref_region values('송파구', '11710');
insert into ref_region values('양천구', '11470');
insert into ref_region values('영등포구', '11560');

create table kb_region_index_ym (region char(5) not null, ym char(6) not null, index_val double(5,2), primary key(region, ym));
load DATA INFILE '/tmp/mysql/kb-apt-index.csv' INTO TABLE kb_region_index_ym FIELDS TERMINATED BY ','  LINES TERMINATED BY '\n';

create table apt_sale_ma (apt_id int not null, ym char(6) not null, ma int not null, unit_price double(10,2), primary key(apt_id, ym, ma));

insert into apt_sale_ma select apt_id, a.ym, 6, avg(price/(area/3.3)) from tmp_ym a, apt_sale b where b.saled between date_sub(date_add(str_to_date(con
cat(a.ym, '01000000'), '%Y%m%d%H%i%S'), interval 1 month), interval 6 month) and date_sub(date_add(str_to_date(concat(a.ym, '01235959'), '%Y%m%d%H%i%S'), inte
rval 1 month), interval 1 day) group by apt_id, ym;


create table apt_master_new (id int not null auto_increment, apt_name varchar(255) not null, region char(5) not null, dong char(5) not null, road_cd va
rchar(7), made_year int not null, primary key (id));

insert into apt_master_new select NULL, apt_name, dong_region1_cd, dong_region2_cd, road_cd, made_year from aptsise.aptsise group by apt_name, dong_reg
ion1_cd, dong_region2_cd, road_cd, made_year;

update aptsise.aptsise a, apt_master b set a.apt_id = b.id
 where a.apt_name = b.apt_name 
    and a.dong_region1_cd = b.region 
    and a.road_cd = b.road_cd 
    and a.dong_region2_cd = b.dong 
    and a.made_year = b.made_year;

create table tmp_apt_dup as select b.id new_id, a.* from apt_master a, apt_master_new b, tmp_apt_mapping c where c.apt_id = a.id and a.apt_name=b.apt_n
ame and a.region = b.region and a.dong_region2_cd = b.dong;

alter table tmp_apt_mapping add new_id int;
update tmp_apt_mapping a set new_id = (select new_id from tmp_apt_dup where id in (select id from tmp_apt_dup group by id having count(*) = 1) and id=a
.apt_id);

